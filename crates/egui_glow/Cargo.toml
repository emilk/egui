[package]
name = "egui_glow"
version.workspace = true
authors = ["Emil Ernerfeldt <emil.ernerfeldt@gmail.com>"]
description = "Bindings for using egui natively using the glow library"
edition.workspace = true
rust-version.workspace = true
homepage = "https://github.com/emilk/egui/tree/master/crates/egui_glow"
license.workspace = true
readme = "README.md"
repository = "https://github.com/emilk/egui/tree/master/crates/egui_glow"
categories = ["gui", "game-development"]
keywords = ["glow", "egui", "gui", "gamedev"]
include = [
  "../LICENSE-APACHE",
  "../LICENSE-MIT",
  "**/*.rs",
  "Cargo.toml",
  "src/shader/*.glsl",
]

[lints]
workspace = true

[package.metadata.docs.rs]
all-features = true


[features]
default = []

## For the `winit` integration:
## enable cut/copy/paste to os clipboard.
##
## if disabled a clipboard will be simulated so you can still copy/paste within the egui app.
clipboard = ["egui-winit?/clipboard"]

## For the `winit` integration:
## enable opening links in a browser when an egui hyperlink is clicked.
links = ["egui-winit?/links"]

## Enable profiling with the [`puffin`](https://docs.rs/puffin) crate.
puffin = ["dep:puffin", "egui-winit?/puffin", "egui/puffin"]

## Enable [`winit`](https://docs.rs/winit) integration. On Linux, requires either `wayland` or `x11`
winit = ["egui-winit", "dep:winit"]

## Enables Wayland support for winit.
wayland = ["winit?/wayland"]

## Enables x11 support for winit.
x11 = ["winit?/x11"]


[dependencies]
egui = { workspace = true, default-features = false, features = ["bytemuck"] }
egui-winit = { workspace = true, optional = true, default-features = false }

ahash.workspace = true
bytemuck.workspace = true
glow.workspace = true
log.workspace = true
memoffset = "0.9"

#! ### Optional dependencies
## Enable this when generating docs.
document-features = { workspace = true, optional = true }

# Native:
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
puffin = { workspace = true, optional = true }
winit = { workspace = true, optional = true, default-features = false, features = [
  "rwh_06", # for compatibility with egui-winit
] }

# Web:
[target.'cfg(target_arch = "wasm32")'.dependencies]
web-sys = { workspace = true, features = ["console"] }
wasm-bindgen.workspace = true


[dev-dependencies]
glutin.workspace = true       # examples/pure_glow
glutin-winit.workspace = true
# glutin stuck on old version of raw-window-handle:
rwh_05 = { package = "raw-window-handle", version = "0.5.2", features = [
  "std",
] }

[[example]]
name = "pure_glow"
required-features = [
  "winit",
  "egui/default_fonts",
  "winit/rwh_05",       # glutin stuck on old version of raw-window-handle
]
