[package]
name = "epaint"
version = "0.11.0"
authors = ["Emil Ernerfeldt <emil.ernerfeldt@gmail.com>"]
description = "Minimal 2D graphics library for GUI work"
edition = "2018"
homepage = "https://github.com/emilk/egui"
license = "MIT OR Apache-2.0"
readme = "README.md"
repository = "https://github.com/emilk/egui"
categories = ["graphics", "gui"]
keywords = ["graphics", "gui", "egui"]
include = [
  "../LICENSE-APACHE",
  "../LICENSE-MIT",
  "**/*.rs",
  "Cargo.toml",
  "fonts/*.ttf",
  "fonts/*.txt",
]

[lib]

[dependencies]
emath = { version = "0.11.0", path = "../emath" }

ahash = { version = "0.7", features = ["std"], default-features = false }
atomic_refcell = { version = "0.1", optional = true } # Used instead of parking_lot when you are always using epaint in a single thread. About as fast as parking_lot. Panics on multi-threaded use.
ordered-float = "2"
parking_lot = { version = "0.11", optional = true } # Using parking_lot over std::sync::Mutex gives 50% speedups in some real-world scenarios.
rusttype = "0.9"
serde = { version = "1", features = ["derive"], optional = true }

[features]
default = ["multi_threaded", "default_fonts"]
persistence = ["serde", "emath/serde"]

# If set, epaint will use `include_bytes!` to bundle some fonts.
# If you plan on specifying your own fonts you may disable this feature.
default_fonts = []

single_threaded = ["atomic_refcell"]

# Only needed if you plan to use the same fonts from multiple threads.
multi_threaded = ["parking_lot"]
